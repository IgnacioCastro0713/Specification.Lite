# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Release

on:
  push:
    tags:
      - '*.*.*'

jobs:
  build:
    strategy:
        matrix:
          os: [ubuntu-latest]
        fail-fast: false
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.x'

    - name: Clean output
      run: rm -rf src/Specification/bin/Release/*
          
    - name: Clean
      run: dotnet build src/Specification/Specification.csproj
        
    - name: Restore dependencies
      run: dotnet restore src/Specification/Specification.csproj

    - name: Build
      run: dotnet build src/Specification/Specification.csproj --configuration Release --no-restore --framework net9.0
      
    - name: Test
      run: dotnet test tests/Specification.Test/Specification.Test.csproj --configuration Release --no-restore --framework net9.0

    - name: Extract version
      id: get_version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> "$GITHUB_OUTPUT"
        
    - name: Pack project
      run: dotnet pack src/Specification/Specification.csproj --configuration Release --no-build -o ./nupkgs /p:PackageVersion=${{ steps.get_version.outputs.version }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          Release for version ${{ github.ref_name }}.
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

    - name: Push to NuGet
      run: dotnet nuget push "./nupkgs/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
